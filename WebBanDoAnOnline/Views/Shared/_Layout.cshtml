<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - FuTho Food</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />

    @Styles.Render("~/Content/css")
</head>

<body>

    @{
        var currentController = (ViewContext.RouteData.Values["controller"] as string) ?? "";
        var currentAction = (ViewContext.RouteData.Values["action"] as string) ?? "";
    }

    <main class="page-content">
        <header class="main-header">
            <nav class="navbar navbar-expand-lg">
                <div class="container">
                    @Html.ActionLink("FuTho Food", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })

                    <div class="collapse navbar-collapse justify-content-center">
                        <ul class="navbar-nav">
                            <li class="nav-item">
                                @Html.ActionLink(
                                                              "Trang chủ",
                                                              "Index",
                                                              "Home",
                                                              null,
                                                              new { @class = "nav-link" + ((currentController == "Home" && currentAction == "Index") ? " active" : "") }
                                                          )
                            </li>
                            <li class="nav-item">
                                @Html.ActionLink(
                                                              "Thực đơn",
                                                              "Index",
                                                              "Menu",
                                                              null,
                                                              new { @class = "nav-link" + ((currentController == "Menu" && currentAction == "Index") ? " active" : "") }
                                                          )
                            </li>

                            <li class="nav-item">
                                <a href="@Url.Action("Index","ThongBao")"
                                   class="nav-link@(currentController == "ThongBao" && currentAction == "Index" ? " active" : "")">
                                    Thông báo
                                    <span id="notif-badge" class="menu-badge" style="display:none;">0</span>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a href="@Url.Action("Index","GioHang")"
                                   class="nav-link@(currentController == "GioHang" && currentAction == "Index" ? " active" : "")">
                                    Giỏ hàng
                                    <span id="cart-badge" class="menu-badge" style="display:none;">0</span>
                                </a>
                            </li>
                        </ul>
                    </div>

                    <!-- Khu vực bên phải: giữ ô tìm kiếm + user, bỏ icon/popup thông báo & giỏ hàng -->
                    <div class="d-flex align-items-center header-actions">
                        <div class="search-box me-3">
                            <input type="text" class="form-control" placeholder="Tìm kiếm món ăn">
                            <i class="fa-solid fa-magnifying-glass search-icon"></i>
                        </div>

                        @if (Session["TaiKhoan"] != null)
                        {
                            var currentUser = Session["TaiKhoan"] as WebBanDoAnOnline.Models.TaiKhoan;

                            <!-- Icon Người dùng -->
                            <div class="user-menu-wrapper">
                                <a href="#" class="header-icon" id="user-avatar-icon">
                                    <img src="https://i.imgur.com/4Ym2k5N.png" alt="User Avatar" class="user-avatar" />
                                </a>
                                <!-- User Dropdown Panel -->
                                <div class="user-panel" id="user-panel">
                                    <div class="user-panel-header">
                                        <h3>@((currentUser != null && !string.IsNullOrWhiteSpace(currentUser.HoTen)) ? currentUser.HoTen : "Tài khoản")</h3>
                                    </div>
                                    <div class="user-panel-body">
                                        <a href="#" class="user-menu-item">
                                            <span><i class="fa-regular fa-user user-menu-item-icon"></i> Tài khoản của tôi</span>
                                            <i class="fa-solid fa-chevron-right"></i>
                                        </a>
                                        <a href="#" class="user-menu-item">
                                            <span><i class="fa-solid fa-receipt user-menu-item-icon"></i> Đơn mua</span>
                                            <i class="fa-solid fa-chevron-right"></i>
                                        </a>
                                        <a href="#" class="user-menu-item">
                                            <span><i class="fa-solid fa-gear user-menu-item-icon"></i> Cài đặt</span>
                                            <i class="fa-solid fa-chevron-right"></i>
                                        </a>
                                        @using (Html.BeginForm("LogOff", "TaiKhoan", FormMethod.Post, new { id = "logoutForm" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <a href="javascript:document.getElementById('logoutForm').submit()" class="user-menu-item">
                                                <span><i class="fa-solid fa-right-from-bracket user-menu-item-icon"></i> Đăng xuất</span>
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="header-actions d-flex align-items-center">
                                @Html.ActionLink(
                                                     "Đăng nhập",
                                                     "Login",
                                                     "TaiKhoan",
                                                     routeValues: null,
                                                     htmlAttributes: new { @class = "btn header-btn btn-header-login me-2" }
                                                     )
                                @Html.ActionLink(
                                                     "Đăng ký",
                                                     "Register",
                                                     "TaiKhoan",
                                                     routeValues: null,
                                                     htmlAttributes: new { @class = "btn header-btn btn-header-register" }
                                                     )
                            </div>
                        }
                    </div>

                </div>
            </nav>
        </header>

        <!-- Đã loại bỏ notification-overlay -->

        <div class="container body-content">

            @RenderBody()
            <hr />
        </div>
    </main>

    <footer class="site-footer">
        <div class="container">
            <div class="footer-top">
                <div class="footer-logo">
                    <a href="#">
                        <span class="logo-bold fst-italic">FuTho</span>
                        <span class="logo-regular">Food</span>
                    </a>
                </div>

                <nav class="footer-nav">
                    <ul>
                        <li><a href="#">Về chúng tôi</a></li>
                        <li><a href="#">Giải đáp thắc mắc</a></li>
                        <li><a href="#">Điều khoản & Điều kiện</a></li>
                    </ul>
                </nav>

                <div class="footer-contact">
                    <p>SĐT Liên hệ: 0971123456</p>
                </div>
            </div>

            <div class="footer-bottom">
                <div class="footer-social">
                    <a href="#" aria-label="Facebook"><i class="fab fa-facebook-f"></i></a>
                    <a href="#" aria-label="Instagram"><i class="fab fa-instagram"></i></a>
                    <a href="#" aria-label="Twitter"><i class="fab fa-twitter"></i></a>
                </div>
            </div>
        </div>
    </footer>

    <!-- --- HTML CHO MODAL CHI TIẾT SẢN PHẨM --- -->
    <div class="modal-overlay" id="product-modal-overlay"></div>
    <div class="product-modal" id="product-modal">
        <button class="modal-close-btn" id="modal-close-btn">&times;</button>
        <div class="product-modal-content">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <img id="modal-product-image" src="" alt="Product Image" class="modal-product-image">
                </div>
                <div class="col-md-6">
                    <h2 id="modal-product-name" class="modal-product-name">Tên sản phẩm</h2>
                    <p id="modal-product-price" class="modal-product-price">Giá</p>

                    <div class="product-modal-meta">
                        <span><i class="fa-solid fa-star"></i> <span id="modal-product-rating"></span></span>
                        <span><i class="fa-regular fa-clock"></i> <span id="modal-product-time"></span></span>
                    </div>

                    <div class="product-modal-description">
                        <h5>Mô tả món ăn:</h5>
                        <p id="modal-product-description">Mô tả chi tiết...</p>
                    </div>

                    <!-- Số lượng -->
                    <div class="modal-quantity-selector">
                        <h5>Số lượng</h5>
                        <div class="input-group">
                            <button type="button" class="btn btn-outline-secondary" id="modal-quantity-minus">-</button>
                            <input type="text" id="modal-quantity-input" class="form-control text-center" value="1" readonly />
                            <button type="button" class="btn btn-outline-secondary" id="modal-quantity-plus">+</button>
                        </div>
                    </div>

                    <!-- Ghi chú -->
                    <div class="modal-notes">
                        <h5>Ghi chú</h5>
                        <textarea id="modal-product-notes" class="form-control" rows="2" style="max-width:100%" placeholder="Ví dụ: Ít cay, nhiều rau..."></textarea>
                    </div>

                    <!-- Nút thêm vào giỏ hàng + tổng tiền -->
                    <a href="#" class="btn btn-add-to-cart-modal" id="modal-add-to-cart-btn">
                        <span>Thêm vào giỏ hàng</span>
                        <span id="modal-total-price">0 ₫</span>
                    </a>
                </div>
            </div>
        </div>
    </div>



    <!-- Token chống giả mạo dùng cho mọi POST -->
    <div id="__af-token" style="display:none;">
        @Html.AntiForgeryToken()
    </div>

    @Scripts.Render("~/bundles/jquery")

    <script>
        // Module helper dùng chung
        window.App = (function () {
            function getXsrf() {
                var el = document.querySelector('#__af-token input[name="__RequestVerificationToken"]');
                return el ? el.value : '';
            }

            async function postForm(url, data) {
                const params = new URLSearchParams(data || {});
                const xsrf = getXsrf();
                if (xsrf && !params.has('__RequestVerificationToken')) {
                    params.append('__RequestVerificationToken', xsrf);
                }
                const resp = await fetch(url, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' },
                    body: params
                });
                if (!resp.ok) throw new Error('Network error');
                return resp.json();
            }

            function setBadge(id, count) {
                var $b = $('#' + id);
                if (!$b.length) return;
                if ((count || 0) > 0) { $b.text(count).show(); } else { $b.hide(); }
            }

            function toCurrency(n) {
                try { return (n || 0).toLocaleString('vi-VN'); } catch { return String(n || 0); }
            }

            function parseNumber(s) {
                return parseFloat(String(s).replace(/[^0-9]+/g, '')) || 0;
            }

            function showToast(message, type) {
                var stack = document.getElementById('toast-stack');
                if (!stack) {
                    stack = document.createElement('div');
                    stack.id = 'toast-stack';
                    stack.className = 'toast-stack';
                    document.body.appendChild(stack);
                }
                var el = document.createElement('div');
                el.className = 'app-toast ' + (type || '');
                el.innerHTML = '<div class="toast-content">' + message + '</div>';
                stack.appendChild(el);

                var ttl = 2600;
                setTimeout(function () { el.classList.add('hide'); }, ttl - 300);
                el.addEventListener('transitionend', function () {
                    if (el && el.parentNode) el.parentNode.removeChild(el);
                });
            }

            return {
                postForm: postForm,
                setBadge: setBadge,
                toCurrency: toCurrency,
                parseNumber: parseNumber,
                showToast: showToast
            };
        })();

        // Giữ tương thích code cũ
        window.setMenuBadge = function (id, count) { return window.App.setBadge(id, count); };
        window.showToast = window.App.showToast;

        $(function () {
            // 1) Khởi tạo badge
            (function initBadges() {
                fetch('@Url.Action("CartCount","GioHang")', { credentials: 'same-origin' })
                    .then(r => r.ok ? r.json() : null)
                    .then(res => { if (res && res.ok) App.setBadge('cart-badge', res.count || 0); })
                    .catch(() => { /* ignore */ });

                fetch('@Url.Action("UnreadCount","ThongBao")', { credentials: 'same-origin' })
                    .then(r => r.ok ? r.json() : null)
                    .then(res => { if (res && res.ok) App.setBadge('notif-badge', res.unread || 0); })
                    .catch(() => { /* ignore */ });
            })();

            // 2) Đồng bộ biến CSS chiều cao header (cho mobile panel)
            (function syncHeaderHeightVar() {
                function setHeaderHeight() {
                    var h = $('.main-header').outerHeight() || 64;
                    document.documentElement.style.setProperty('--header-h', h + 'px');
                }
                setHeaderHeight();
                $(window).on('resize', setHeaderHeight);
            })();

            // 3) Hiệu ứng gạch chân trượt cho navbar
            (function setupSlidingUnderline() {
                var $nav = $('.navbar .navbar-nav');
                if (!$nav.length) return;

                var $underline = $nav.find('.nav-underline');
                if (!$underline.length) {
                    $underline = $('<span class="nav-underline" aria-hidden="true"></span>').appendTo($nav);
                }

                var $activeLink = $nav.find('.nav-link.active').first();
                var animationDuration = 360;

                function getTargetTransform($el) {
                    if (!$el || !$el.length) return 'scaleX(0)';
                    var left = $el.position().left;
                    var width = $el.outerWidth();
                    return 'translate3d(' + left + 'px, 0, 0) scaleX(' + width + ')';
                }

                function moveTo($el, withAnimation) {
                    $underline.css('transition', withAnimation ? '' : 'none');
                    $underline[0].style.transform = getTargetTransform($el);
                    if (!withAnimation) {
                        $underline[0].getBoundingClientRect();
                        $underline.css('transition', '');
                    }
                }

                if ($activeLink.length) {
                    moveTo($activeLink, false);
                }

                $nav.on('click', '.nav-link', function (e) {
                    var $clickedLink = $(this);
                    if ($clickedLink.is($activeLink)) return;

                    e.preventDefault();
                    moveTo($clickedLink, true);

                    setTimeout(function () {
                        window.location.href = $clickedLink.attr('href');
                    }, animationDuration);
                });

                var resizeTimer;
                $(window).on('resize', function () {
                    clearTimeout(resizeTimer);
                    resizeTimer = setTimeout(function () {
                        var $currentActive = $nav.find('.nav-link.active').first();
                        if ($currentActive.length) {
                            moveTo($currentActive, false);
                        }
                    }, 80);
                });
            })();

            // 4) Toggle user panel
            (function () {
                var $userAvatarIcon = $('#user-avatar-icon');
                var $userPanel = $('#user-panel');

                function closeUser() { $userPanel.fadeOut(150); $userAvatarIcon.removeClass('active'); }
                function toggleUser(e) {
                    e.preventDefault();
                    if ($userPanel.is(':visible')) closeUser();
                    else { $userPanel.fadeIn(150); $userAvatarIcon.addClass('active'); }
                }
                $userAvatarIcon.on('click', toggleUser);
                $(document).on('click', function (e) {
                    if (!$(e.target).closest('#user-panel, #user-avatar-icon').length) closeUser();
                });
            })();

            // 5) Modal chi tiết sản phẩm + Thêm vào giỏ
            (function () {
                var $productModal = $('#product-modal');
                var $productModalOverlay = $('#product-modal-overlay');
                var currentProductPrice = 0;

                function formatCurrency(number) {
                    return isNaN(number) ? "N/A" : number.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                }

                function updateTotalPrice() {
                    var quantity = parseInt($('#modal-quantity-input').val());
                    var total = quantity * currentProductPrice;
                    $('#modal-total-price').text(formatCurrency(total));
                }

                function openProductModal(data) {
                    currentProductPrice = parseFloat(String(data.price).replace(/[^0-9.-]+/g, ""));

                    $('#modal-product-image').attr('src', data.image);
                    $('#modal-product-name').text(data.name);
                    $('#modal-product-price').text(formatCurrency(currentProductPrice));
                    $('#modal-product-rating').text(data.rating + ' (' + data.reviews + ' đánh giá)');
                    $('#modal-product-time').text(data.time);
                    $('#modal-product-description').text(data.description);
                    $('#modal-add-to-cart-btn').data('id', data.id);

                    $('#modal-quantity-input').val(1);
                    $('#modal-product-notes').val('');

                    updateTotalPrice();

                    $productModalOverlay.fadeIn(200);
                    $productModal.fadeIn(200);
                }

                function closeProductModal() {
                    $productModalOverlay.fadeOut(200);
                    $productModal.fadeOut(200);
                }

                // Mở modal từ nút "Đặt món"
                $('.body-content').on('click', '.btn-order', function (e) {
                    e.preventDefault();
                    var $button = $(this);
                    var productData = {
                        id: $button.data('id'),
                        name: $button.data('name'),
                        price: $button.data('price'),
                        image: $button.data('image'),
                        description: $button.data('description'),
                        time: $button.data('time'),
                        rating: $button.data('rating'),
                        reviews: $button.data('reviews')
                    };
                    openProductModal(productData);
                });

                $('#modal-close-btn, #product-modal-overlay').on('click', closeProductModal);
                $productModal.on('click', function (e) { e.stopPropagation(); });

                // +/- số lượng
                $('#modal-quantity-plus').on('click', function () {
                    var $input = $('#modal-quantity-input');
                    var currentVal = parseInt($input.val());
                    $input.val(currentVal + 1);
                    updateTotalPrice();
                });

                $('#modal-quantity-minus').on('click', function () {
                    var $input = $('#modal-quantity-input');
                    var currentVal = parseInt($input.val());
                    if (currentVal > 1) {
                        $input.val(currentVal - 1);
                        updateTotalPrice();
                    }
                });

                // Thêm vào giỏ
                $('#modal-add-to-cart-btn').on('click', async function (e) {
                    e.preventDefault();

                    var productId = $(this).data('id');
                    var quantity = parseInt($('#modal-quantity-input').val()) || 1;
                    var notes = $('#modal-product-notes').val() || '';
                    var productName = ($('#modal-product-name').text() || '').trim();

                    try {
                        var res = await App.postForm('@Url.Action("Add", "GioHang")', {
                            productId: productId,
                            quantity: quantity,
                            notes: notes
                        });

                        if (res && res.requireLogin) {
                            window.location = '@Url.Action("Login","TaiKhoan")';
                            return;
                        }

                        if (res && res.ok) {
                            App.setBadge('cart-badge', res.count || 0);
                            App.showToast('Đã thêm ' + (productName || 'sản phẩm') + ' x' + quantity + ' vào giỏ hàng.', 'success');
                            closeProductModal();
                        } else {
                            App.showToast((res && res.message) ? res.message : 'Không thể thêm vào giỏ hàng.', 'error');
                        }
                    } catch {
                        App.showToast('Có lỗi khi thêm vào giỏ hàng. Vui lòng thử lại.', 'error');
                    }
                });
            })();
        });
    </script>

    @RenderSection("scripts", required: false)
    <div id="toast-stack" class="toast-stack" aria-live="polite" aria-atomic="true"></div>
</body>
</html>
